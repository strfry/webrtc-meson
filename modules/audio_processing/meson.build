libaudio_processing_files = files(
    'aec/aec_resampler.cc',
    'aec/aec_resampler.h',
    'aec/echo_cancellation.cc',
    'aec/echo_cancellation.h',
    'agc/agc.cc',
    'agc/agc.h',
    'agc/agc_manager_direct.cc',
    'agc/agc_manager_direct.h',
    'agc/gain_map_internal.h',
    'agc/loudness_histogram.cc',
    'agc/loudness_histogram.h',
    'agc/utility.cc',
    'agc/utility.h',
    'audio_buffer.cc',
    'audio_buffer.h',
    'audio_processing_impl.cc',
    'audio_processing_impl.h',
    'beamformer/array_util.cc',
    'beamformer/array_util.h',
    'beamformer/complex_matrix.h',
    'beamformer/covariance_matrix_generator.cc',
    'beamformer/covariance_matrix_generator.h',
    'beamformer/matrix.h',
    'beamformer/nonlinear_beamformer.cc',
    'beamformer/nonlinear_beamformer.h',
    'common.h',
    'echo_cancellation_impl.cc',
    'echo_cancellation_impl.h',
    'echo_control_mobile_impl.cc',
    'echo_control_mobile_impl.h',
    'echo_detector/circular_buffer.cc',
    'echo_detector/circular_buffer.h',
    'echo_detector/mean_variance_estimator.cc',
    'echo_detector/mean_variance_estimator.h',
    'echo_detector/moving_max.cc',
    'echo_detector/moving_max.h',
    'echo_detector/normalized_covariance_estimator.cc',
    'echo_detector/normalized_covariance_estimator.h',
    'gain_control_for_experimental_agc.cc',
    'gain_control_for_experimental_agc.h',
    'gain_control_impl.cc',
    'gain_control_impl.h',
    'gain_controller2.cc',
    'gain_controller2.h',
    'include/audio_processing.cc',
    'include/audio_processing.h',
    'include/config.cc',
    'include/config.h',
    'level_estimator_impl.cc',
    'level_estimator_impl.h',
    'low_cut_filter.cc',
    'low_cut_filter.h',
    'noise_suppression_impl.cc',
    'noise_suppression_impl.h',
    'render_queue_item_verifier.h',
    'residual_echo_detector.cc',
    'residual_echo_detector.h',
    'rms_level.cc',
    'rms_level.h',
    'splitting_filter.cc',
    'splitting_filter.h',
    'three_band_filter_bank.cc',
    'three_band_filter_bank.h',
    'transient/common.h',
    'transient/daubechies_8_wavelet_coeffs.h',
    'transient/dyadic_decimator.h',
    'transient/moving_moments.cc',
    'transient/moving_moments.h',
    'transient/transient_detector.cc',
    'transient/transient_detector.h',
    'transient/transient_suppressor.cc',
    'transient/transient_suppressor.h',
    'transient/wpd_node.cc',
    'transient/wpd_node.h',
    'transient/wpd_tree.cc',
    'transient/wpd_tree.h',
    'typing_detection.cc',
    'typing_detection.h',
    'voice_detection_impl.cc',
    'voice_detection_impl.h',
)

# C files
libaudio_processing_files += files(
    'agc/legacy/analog_agc.c',
    'agc/legacy/analog_agc.h',
    'agc/legacy/digital_agc.c',
    'agc/legacy/digital_agc.h',
    'agc/legacy/gain_control.h',
    'ns/defines.h',
    'ns/noise_suppression.c',
    'ns/noise_suppression.h',
    'ns/ns_core.c',
    'ns/ns_core.h',
    'ns/windows_private.h',
)

libaudio_processing_files += files(
    'logging/apm_data_dumper.cc',
    'logging/apm_data_dumper.h',

    # aec_core
    'aec/aec_common.h',
    'aec/aec_core.cc',
    'aec/aec_core.h',
    'aec/aec_core_optimized_methods.h',
    'aecm/aecm_core.cc',
    'aecm/aecm_core.h',
    'aecm/aecm_defines.h',
    'aecm/echo_control_mobile.cc',
    'aecm/echo_control_mobile.h',
    'utility/block_mean_calculator.cc',
    'utility/block_mean_calculator.h',
    'utility/delay_estimator.cc',
    'utility/delay_estimator.h',
    'utility/delay_estimator_internal.h',
    'utility/delay_estimator_wrapper.cc',
    'utility/delay_estimator_wrapper.h',
    'utility/ooura_fft.cc',
    'utility/ooura_fft.h',
    'utility/ooura_fft_tables_common.h',

    # aec_dump
    'include/aec_dump.cc',
    'include/aec_dump.h',

    # intelligibility_enhancer
    'intelligibility/intelligibility_enhancer.cc',
    'intelligibility/intelligibility_enhancer.h',
    'intelligibility/intelligibility_utils.cc',
    'intelligibility/intelligibility_utils.h',

    # audio_processing_statistics
    'include/audio_processing_statistics.cc',
    'include/audio_processing_statistics.h',
)

# stuff in modules/audio_processing/agc2 (originally has own build file)
libaudio_processing_files += files(
    'agc2/fixed_digital_level_estimator.cc',
    'agc2/fixed_digital_level_estimator.h',
    'agc2/fixed_gain_controller.cc',
    'agc2/fixed_gain_controller.h',
    'agc2/gain_curve_applier.cc',
    'agc2/gain_curve_applier.h',
    'agc2/interpolated_gain_curve.cc',
    'agc2/interpolated_gain_curve.h',

    # adaptive_digital
    'agc2/adaptive_agc.cc',
    'agc2/adaptive_agc.h',
    'agc2/adaptive_digital_gain_applier.cc',
    'agc2/adaptive_digital_gain_applier.h',
    'agc2/adaptive_mode_level_estimator.cc',
    'agc2/adaptive_mode_level_estimator.h',
    'agc2/saturation_protector.cc',
    'agc2/saturation_protector.h',

    # noise_level_estimator
    'agc2/biquad_filter.cc',
    'agc2/biquad_filter.h',
    'agc2/down_sampler.cc',
    'agc2/down_sampler.h',
    'agc2/noise_level_estimator.cc',
    'agc2/noise_level_estimator.h',
    'agc2/noise_spectrum_estimator.cc',
    'agc2/noise_spectrum_estimator.h',
    'agc2/signal_classifier.cc',
    'agc2/signal_classifier.h',
)

# stuff in modules/audio_processing/vad
libaudio_processing_files += files(
    'vad/common.h',
    'vad/gmm.cc',
    'vad/gmm.h',
    'vad/noise_gmm_tables.h',
    'vad/pitch_based_vad.cc',
    'vad/pitch_based_vad.h',
    'vad/pitch_internal.cc',
    'vad/pitch_internal.h',
    'vad/pole_zero_filter.cc',
    'vad/pole_zero_filter.h',
    'vad/standalone_vad.cc',
    'vad/standalone_vad.h',
    'vad/vad_audio_proc.cc',
    'vad/vad_audio_proc.h',
    'vad/vad_audio_proc_internal.h',
    'vad/vad_circular_buffer.cc',
    'vad/vad_circular_buffer.h',
    'vad/voice_activity_detector.cc',
    'vad/voice_activity_detector.h',
    'vad/voice_gmm_tables.h',
)

# stuff in modules/audio_processing/aec3 . TODO: Think about separate build file?
libaudio_processing_files += files(
    'aec3/adaptive_fir_filter.cc',
    'aec3/adaptive_fir_filter.h',
    'aec3/aec3_common.cc',
    'aec3/aec3_common.h',
    'aec3/aec3_fft.cc',
    'aec3/aec3_fft.h',
    'aec3/aec_state.cc',
    'aec3/aec_state.h',
    'aec3/block_framer.cc',
    'aec3/block_framer.h',
    'aec3/block_processor.cc',
    'aec3/block_processor.h',
    'aec3/block_processor_metrics.cc',
    'aec3/block_processor_metrics.h',
    'aec3/cascaded_biquad_filter.cc',
    'aec3/cascaded_biquad_filter.h',
    'aec3/comfort_noise_generator.cc',
    'aec3/comfort_noise_generator.h',
    'aec3/decimator.cc',
    'aec3/decimator.h',
    'aec3/delay_estimate.h',
    'aec3/downsampled_render_buffer.cc',
    'aec3/downsampled_render_buffer.h',
    'aec3/echo_canceller3.cc',
    'aec3/echo_canceller3.h',
    'aec3/echo_path_delay_estimator.cc',
    'aec3/echo_path_delay_estimator.h',
    'aec3/echo_path_variability.cc',
    'aec3/echo_path_variability.h',
    'aec3/echo_remover.cc',
    'aec3/echo_remover.h',
    'aec3/echo_remover_metrics.cc',
    'aec3/echo_remover_metrics.h',
    'aec3/erl_estimator.cc',
    'aec3/erl_estimator.h',
    'aec3/erle_estimator.cc',
    'aec3/erle_estimator.h',
    'aec3/fft_buffer.cc',
    'aec3/fft_buffer.h',
    'aec3/fft_data.h',
    'aec3/filter_analyzer.cc',
    'aec3/filter_analyzer.h',
    'aec3/frame_blocker.cc',
    'aec3/frame_blocker.h',
    'aec3/main_filter_update_gain.cc',
    'aec3/main_filter_update_gain.h',
    'aec3/matched_filter.cc',
    'aec3/matched_filter.h',
    'aec3/matched_filter_lag_aggregator.cc',
    'aec3/matched_filter_lag_aggregator.h',
    'aec3/matrix_buffer.cc',
    'aec3/matrix_buffer.h',
    'aec3/output_selector.cc',
    'aec3/output_selector.h',
    'aec3/render_buffer.cc',
    'aec3/render_buffer.h',
    'aec3/render_delay_buffer.cc',
    'aec3/render_delay_buffer.h',
    'aec3/render_delay_controller.cc',
    'aec3/render_delay_controller.h',
    'aec3/render_delay_controller_metrics.cc',
    'aec3/render_delay_controller_metrics.h',
    'aec3/render_signal_analyzer.cc',
    'aec3/render_signal_analyzer.h',
    'aec3/residual_echo_estimator.cc',
    'aec3/residual_echo_estimator.h',
    'aec3/shadow_filter_update_gain.cc',
    'aec3/shadow_filter_update_gain.h',
    'aec3/skew_estimator.cc',
    'aec3/skew_estimator.h',
    'aec3/subtractor.cc',
    'aec3/subtractor.h',
    'aec3/subtractor_output.h',
    'aec3/suppression_filter.cc',
    'aec3/suppression_filter.h',
    'aec3/suppression_gain.cc',
    'aec3/suppression_gain.h',
    'aec3/suppression_gain_limiter.cc',
    'aec3/suppression_gain_limiter.h',
    'aec3/vector_buffer.cc',
    'aec3/vector_buffer.h',
    'aec3/vector_math.h',
)


# modules/audio_processing/aec_dump
libaudio_processing_files += files(
    'aec_dump/null_aec_dump_factory.cc',
)

# x86 specific stuff
libaudio_processing_files += files(
    'aec/aec_core_sse2.cc',
    'utility/ooura_fft_sse2.cc',
    'utility/ooura_fft_tables_neon_sse2.h',
)

# for MIPS there is an optimized alternative
libaudio_processing_files += files(
    'aecm/aecm_core_c.cc'
)

libaudio_processing = static_library(
  'audio_processing',
  libaudio_processing_files,
  include_directories : [inc_common],
  cpp_args: internal_args,
)

all_libraries += libaudio_processing
